Pregunta 1
a. elegir dos vértices u y v de costo mínimo tal que u está en U y v está en V-U; (correcto)

El siguiente esbozo del algoritmo de PRIM para obtener un árbol abarcador de costo mínimo está incompleto. La sentencia que falta es:
Método Prim (conjunto de aristas T);
U: conjunto de vértices;
u, v: vértice;

COMIENZO
T.Vaciar;
U.Agregar({});

MIENTRAS U <> v hacer
sentencia que falta
T.agregar(u,v);
U.agregar(v);

FIN MIENTRAS
FIN;

Seleccione una:

b. elegir una arista (u,v) de costo mínimo tal que u está en U y v está en V-U;
c. elegir un vértice v de costo mínimo tal que esté en U-V;
d. elegir una arista (u,v) de costo mínimo tal que u está en U y v está en V;

Pregunta 2
a. solamente generará arcos de árbol y arcos de retroceso (correcto)

La búsqueda en profundidad en un grafo no dirigido conexo
Seleccione una:

b. resulta de un orden del tiempo de ejecución superior al de la búsqueda en amplitud
c. no puede realizarse, ya que solamente está definida para los grafos dirigidos
d. solamente generará arcos de árbol y arcos cruzados

Pregunta 3
d. se necesitará la misma memoria que sería necesaria si el grafo fuera dirigido (correcto)

Al representar un grafo no dirigido por medio de matriz de adyacencias,
Seleccione una:
a. si A es la cantidad de aristas, hará falta un espacio de memoria proporcional a A al cuadrado.
b. se necesitará el doble de la memoria que sería necesaria si el grafo fuera dirigido
c. se puede usar la mitad de la memoria que sería necesaria si el grafo fuera dirigido


Pregunta 4
c. No existen puntos de articulación (correcto)

En el grafo de la figura
Seleccione una:
a. Hay tres puntos de articulación
b. Hay un punto de articulación

d. Hay dos puntos de articulación

Pregunta 5
a. un camino de u a v (correcto)

Dados dos vértices u y v de un grafo no dirigido G, para decir que u y v están conectados, es necesario que exista:

b. más de un camino de u a v
c. un ciclo que involucre a u y v
d. el arco (u,v)

Pregunta 6
c. matriz de adyacencias, para almacenar las aristas se necesitará el doble de espacio de memoria que para un grafo dirigido (correcto)

Para representar grafos no dirigidos se pueden emplear también los métodos de representación de grafos dirigidos. Si el grafo no dirigido se representa mediante:
a. matriz de adyacencias, el orden del tiempo de ejecución para saber si existe una arista será el doble que para un grafo dirigido
b. listas de adyacencias, para almacenar las aristas se necesitará el doble de espacio de memoria que para un grafo dirigido

d. listas de adyacencias, el orden del tiempo de ejecución para saber si existe una arista será el doble que para un grafo dirigido

Pregunta 7
b. una búsqueda en profundidad (correcto)

En un grafo no dirigido el problema de encontrar los puntos de articulación se resuelve mediante un algoritmo basado:
a. Prim o Kruskal

c. búsqueda en amplitud
d. una búsqueda en amplitud

Pregunta 8
c. si un árbol libre tiene n vértices tendrá exactamente n - 1 aristas (con n mayor que cero) (correcto)

Es una propiedad de un árbol libre:
a. si un árbol libre tiene n vértices tendrá exactamente n aristas (con n mayor que cero)
b. si se quita cualquier arista de un árbol libre, se agrega un ciclo

d. si se quita cualquier arista de un árbol libre, se quita un ciclo

Pregunta 9
b. no (cola.vacia)
    cola.agregar(w) (correcto)


Al siguiente recorrido en amplitud le faltan dos sentencias, seleccione las que correspondan (TAristas aristas):
COMIENZO
TCola cola = nueva TCola
this.visit
cola.agregar(this)
mientras <sentencias que faltan> hacer
v = cola.quitar
para cada w adyacente a v hacer
Si no visitado w entonces
w.visit
aristas.agregar(v,w)
<sentencias que faltan>
finsi
fin para
fin mientras
FIN
a. cola != aristas
v
wbea(aristas)

Pregunta 10
b. la arista (f,h) será un arco de árbol (correcto)

Aplicando una búsqueda en amplitud comenzando por el vértice con etiqueta "d":
a. se obtiene un árbol de altura 1

c. la arista (d,h) será un arco cruzado
d. la arista (d,h) será un arco cruzado

Pregunta 12
c. cuando se elimina junto con todas las aristas incidentes sobre él, se divide un componente conexo en dos o más partes (correcto)

Un punto de articulación de un grafo no dirigido es un vértice tal que:
a. aunque se elimine junto con todas las aristas incidentes sobre él, el componente sigue siendo conexo
b. aunque se elimine junto con todas las aristas incidentes sobre él, el componente sigue siendo biconexo

d. aunque se elimine junto con todas las aristas incidentes sobre él, se divide un componente conexo en dos o más grafos biconexos

Pregunta 13
c. verificar si el grafo tiene ciclos (correcto)

La búsqueda en amplitud en un grafo no dirigido se usa, por ejemplo, para:
a. obtener un árbol abarcador de costo mínimo
b. obtener los puntos de articulación

d. todas son correctas

Pregunta 14
b. cuando se elimina junto con todas las aristas incidentes sobre él, se divide un componente conexo en dos o más partes (correcto)

Un punto de articulación de un grafo no dirigido es un vértice tal que:
a. aunque se elimine junto con todas las aristas incidentes sobre él, el componente sigue siendo biconexo

c. cuando se elimina junto con todas las aristas incidentes sobre él, se divide un componente conexo en dos o más grafos biconexos
d. aunque se elimine junto con todas las aristas incidentes sobre él, el componente sigue siendo conexo

Pregunta 15
b. la suma de los costos de sus aristas es la mínima posible (correcto)

Un árbol abarcador de costo mínimo de un grafo no dirigido G es un árbol libre que conecta todos los vértices de G, y:
a. la cantidad de ciclos es la mínima posible

c. la altura es la mínima posible
d. la cantidad de puntos de articulación es la mínima posible
